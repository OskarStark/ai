ai:
    platform:
        openai:
            api_key: '%env(OPENAI_API_KEY)%'
        elevenlabs:
            api_key: '%env(ELEVEN_LABS_API_KEY)%'
    agent:
        blog:
            model: 'gpt-4o-mini'
            tools:
                - 'Symfony\AI\Agent\Toolbox\Tool\SimilaritySearch'
                - service: 'clock'
                  name: 'clock'
                  description: 'Provides the current date and time.'
                  method: 'now'
        stream:
            model: 'gpt-4o-mini'
            prompt:
                file: '%kernel.project_dir%/prompts/stream-chat.txt'
            tools: false
        youtube:
            model: 'gpt-4o-mini'
            tools: false
        wikipedia:
            model:
                name: 'gpt-4o-mini'
                options:
                    temperature: 0.5
            prompt:
                text: 'Please answer the users question based on Wikipedia, only use information provided in the messages.'
                include_tools: true
            tools:
                - 'Symfony\AI\Agent\Toolbox\Tool\Wikipedia'
            include_sources: true
        audio:
            model: 'gpt-4o-mini?temperature=1.0'
            prompt: 'You are a friendly chatbot that likes to have a conversation with users and asks them some questions.'
            tools:
                # Agent in agent ðŸ¤¯
                - agent: 'blog'
                  name: 'symfony_blog'
                  description: 'Can answer questions based on the Symfony blog.'
        orchestrator:
            model: 'gpt-4o-mini'
            prompt: 'You are an intelligent agent orchestrator that routes user questions to specialized agents.'
            tools: false
        technical:
            model: 'gpt-4o-mini'
            prompt: 'You are a technical support specialist. Help users resolve bugs, problems, and technical errors.'
            tools: false
        fallback:
            model: 'gpt-4o-mini'
            prompt: 'You are a helpful general assistant. Assist users with any questions or tasks they may have.'
            tools: false
        elevenlabs_audio:
            model: 'gpt-4o-mini'
            prompt: 'You are a helpful assistant with access to speech-to-text capabilities via ElevenLabs.'
            tools:
                # Platform as tool ðŸš€
                - platform: 'elevenlabs'
                  model: 'scribe_v1'
                  name: 'transcribe_audio'
                  description: 'Transcribes audio files to text using ElevenLabs.'
    multi_agent:
        support:
            orchestrator: 'orchestrator'
            handoffs:
                technical: ['bug', 'problem', 'technical', 'error', 'code', 'debug']
            fallback: 'fallback'
    store:
        chroma_db:
            symfonycon:
                collection: 'symfony_blog'
    vectorizer:
        openai:
            model: 'text-embedding-ada-002'
    indexer:
        blog:
            loader: 'Symfony\AI\Store\Document\Loader\RssFeedLoader'
            source: 'https://feeds.feedburner.com/symfony/blog'
            filters:
                - 'app.filter.week_of_symfony'
            transformers:
                - 'Symfony\AI\Store\Document\Transformer\TextTrimTransformer'
            vectorizer: 'ai.vectorizer.openai'
            store: 'ai.store.chroma_db.symfonycon'

services:
    _defaults:
        autowire: true
        autoconfigure: true

    # Symfony\AI\Agent\Toolbox\Tool\Clock: ~
    # Symfony\AI\Agent\Toolbox\Tool\OpenMeteo: ~
    # Symfony\AI\Agent\Toolbox\Tool\SerpApi:
    #     $apiKey: '%env(SERP_API_KEY)%'
    Symfony\AI\Agent\Toolbox\Tool\Wikipedia: ~
    Symfony\AI\Agent\Toolbox\Tool\SimilaritySearch:
        $vectorizer: '@ai.vectorizer.openai'
        $store: '@ai.store.chroma_db.symfonycon'

    Symfony\AI\Store\Document\Loader\RssFeedLoader: ~
    Symfony\AI\Store\Document\Transformer\TextTrimTransformer: ~

    # Example: Using a Platform as a Tool
    # This demonstrates how to wrap any platform as a tool that can be used by agents
    app.tool.elevenlabs_transcription:
        class: 'Symfony\AI\Agent\Toolbox\Tool\Platform'
        arguments:
            $platform: '@ai.platform.elevenlabs'
            $model: 'scribe_v1'
            $options: []

    app.filter.week_of_symfony:
        class: 'Symfony\AI\Store\Document\Filter\TextContainsFilter'
        arguments:
            $needle: 'Week of Symfony'
            $caseSensitive: false
